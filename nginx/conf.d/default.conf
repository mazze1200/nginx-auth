# proxy_cache_path /var/cache/nginx/ouath2 levels=1 keys_zone=ouath2:1m max_size=10m;

js_import github_auth from github_oauth.js;
resolver 10.89.1.1;

server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    # access_log  /var/log/nginx/host.access.log  main;

    
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    location /secure/ {
        # set $cookie_path "/";
        # set $auth_request_uri $request_uri;
        auth_request /_github_authenticate;
        # auth_request_set $token $sent_http_token;
        # proxy_set_header Token $token;
        # # Set Cookie for 1 year
        # add_header Set-Cookie "token=<my_token>";
        # add_header Set-Cookie "token=$token; Max-Age=31536000; Path=$cookie_path";
        # auth_request_set $token_payload $sent_http_token_payload;
        # proxy_set_header Token-Payload $token_payload;
        error_page 401 = @autherror;

        proxy_pass http://whoami;
    }

    location /data/ {
        # auth_request /_github_authenticate;
        # error_page 401 = @autherror;
        proxy_cookie_path /foo "/; SameSite=None; HTTPOnly; Secure";

        proxy_pass http://whoami;
    }

    location = /_github_authenticate {
        # This location implements an auth_request server that uses the JavaScript
        # module to perform the token introspection request.
        internal;
        #   proxy_pass_request_body off;
        #   proxy_set_header Content-Length "";
        #   proxy_set_header X-Original-URI $request_uri;
        js_content github_auth.authenticate;
    }

    location = /_github_login {
        # This location implements an auth_request server that uses the JavaScript
        # module to perform the token introspection request.
        # internal;
        set $auth_request_uri $request_uri;

        js_content github_auth.login;

        # return 302 "http://192.168.20.32";
    }

    location = /_oauth2_send_request {
        internal;
        proxy_method      POST;
        proxy_set_header accept "application/json";
        proxy_set_header Content-Type "application/json";
        proxy_pass "http://github:3000/access_token?code=$arg_code";
    }
    

    location @autherror {
        # If the user is not logged in, redirect them to GitHub's login URL
        # See https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps#1-request-a-users-github-identity
        return 302 "http://192.168.20.32:3000/authorize";
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

